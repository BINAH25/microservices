{
  "swagger": "2.0",
  "info": {
    "title": "Main Microservice API",
    "description": "API documentation for the Flask-based Main Microservice",
    "version": "1.0.0",
    "contact": {
      "name": "Support Team",
      "email": "louisbinah@gmail.com"
    }
  },
  "host": "localhost:5000",
  "basePath": "/flask/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "Get all products",
        "description": "Returns a list of all products",
        "operationId": "getProducts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}/like": {
      "post": {
        "summary": "Like a product",
        "description": "Like a product identified by its ID",
        "operationId": "likeProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to like",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - You already liked this product"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Check the health of the service",
        "operationId": "healthCheck",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Service is unhealthy"
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Product ID"
        },
        "title": {
          "type": "string",
          "description": "Product title"
        },
        "image": {
          "type": "string",
          "description": "URL of the product image"
        }
      }
    },
    "ProductUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "ProductUser ID"
        },
        "user_id": {
          "type": "integer",
          "format": "int64",
          "description": "User ID"
        },
        "product_id": {
          "type": "integer",
          "format": "int64",
          "description": "Product ID"
        }
      }
    }
  }
}